from Crypto.PublicKey import RSA

# p, q, e, d
p = 9947552893950906269328648549145178771895717918879534268596710418258281150737256880896156007461875675739301322560580689956843008693035783784433073087771817
q = 6335071448358918279037799305901733930746208772362464070308716821338948064656162788666752360767195528885506356685291454982138186187442309576566534342267267
e = 77970276620657332909892440129
d = 29085008090311957526881401570837679061476702845066935212798422850185687421416883692681295923418121122509288273055015279426682999316248702605218957611728989286950347905339865404084064137648139936707786022378033742215665780109975817608952448630652943337076367542265238408873588911324055773269804771595214179985

# Génération de la clé
key = RSA.construct((p * q, e, d, p, q))

# Export au format PEM
with open("private_key1.pem", "wb") as f:
    f.write(key.export_key("PEM"))
